<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20183.19.0123.2221                               -->
<workbook original-version='18.1' source-build='2018.3.3 (20183.19.0123.2221)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='grad-students' inline='true' name='federated.0psvplb1j1sn7r1fxih1p1v8jctt' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='grad-students' name='textscan.1aekk1m1jjh0vc1dbhbg80of2syb'>
            <connection class='textscan' directory='C:/Users/okazkayasi/Desktop/DVA/01_Homeworks/02_Homework2/Q1' filename='grad-students.csv' password='' port='0' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1aekk1m1jjh0vc1dbhbg80of2syb' name='grad-students.csv' table='[grad-students#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='Major_code' ordinal='0' />
            <column datatype='string' name='Major' ordinal='1' />
            <column datatype='string' name='Major_category' ordinal='2' />
            <column datatype='integer' name='Grad_total' ordinal='3' />
            <column datatype='integer' name='Grad_sample_size' ordinal='4' />
            <column datatype='integer' name='Grad_employed' ordinal='5' />
            <column datatype='integer' name='Grad_full_time_year_round' ordinal='6' />
            <column datatype='integer' name='Grad_unemployed' ordinal='7' />
            <column datatype='real' name='Grad_unemployment_rate' ordinal='8' />
            <column datatype='real' name='Grad_median' ordinal='9' />
            <column datatype='integer' name='Grad_P25' ordinal='10' />
            <column datatype='real' name='Grad_P75' ordinal='11' />
            <column datatype='integer' name='Nongrad_total' ordinal='12' />
            <column datatype='integer' name='Nongrad_employed' ordinal='13' />
            <column datatype='integer' name='Nongrad_full_time_year_round' ordinal='14' />
            <column datatype='integer' name='Nongrad_unemployed' ordinal='15' />
            <column datatype='real' name='Nongrad_unemployment_rate' ordinal='16' />
            <column datatype='real' name='Nongrad_median' ordinal='17' />
            <column datatype='integer' name='Nongrad_P25' ordinal='18' />
            <column datatype='real' name='Nongrad_P75' ordinal='19' />
            <column datatype='real' name='Grad_share' ordinal='20' />
            <column datatype='real' name='Grad_premium' ordinal='21' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[grad-students.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Major_code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Major_code]</local-name>
            <parent-name>[grad-students.csv]</parent-name>
            <remote-alias>Major_code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Major</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Major]</local-name>
            <parent-name>[grad-students.csv]</parent-name>
            <remote-alias>Major</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Major_category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Major_category]</local-name>
            <parent-name>[grad-students.csv]</parent-name>
            <remote-alias>Major_category</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Grad_total</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Grad_total]</local-name>
            <parent-name>[grad-students.csv]</parent-name>
            <remote-alias>Grad_total</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Grad_sample_size</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Grad_sample_size]</local-name>
            <parent-name>[grad-students.csv]</parent-name>
            <remote-alias>Grad_sample_size</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Grad_employed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Grad_employed]</local-name>
            <parent-name>[grad-students.csv]</parent-name>
            <remote-alias>Grad_employed</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Grad_full_time_year_round</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Grad_full_time_year_round]</local-name>
            <parent-name>[grad-students.csv]</parent-name>
            <remote-alias>Grad_full_time_year_round</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Grad_unemployed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Grad_unemployed]</local-name>
            <parent-name>[grad-students.csv]</parent-name>
            <remote-alias>Grad_unemployed</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Grad_unemployment_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Grad_unemployment_rate]</local-name>
            <parent-name>[grad-students.csv]</parent-name>
            <remote-alias>Grad_unemployment_rate</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Grad_median</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Grad_median]</local-name>
            <parent-name>[grad-students.csv]</parent-name>
            <remote-alias>Grad_median</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Grad_P25</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Grad_P25]</local-name>
            <parent-name>[grad-students.csv]</parent-name>
            <remote-alias>Grad_P25</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Grad_P75</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Grad_P75]</local-name>
            <parent-name>[grad-students.csv]</parent-name>
            <remote-alias>Grad_P75</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Nongrad_total</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Nongrad_total]</local-name>
            <parent-name>[grad-students.csv]</parent-name>
            <remote-alias>Nongrad_total</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Nongrad_employed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Nongrad_employed]</local-name>
            <parent-name>[grad-students.csv]</parent-name>
            <remote-alias>Nongrad_employed</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Nongrad_full_time_year_round</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Nongrad_full_time_year_round]</local-name>
            <parent-name>[grad-students.csv]</parent-name>
            <remote-alias>Nongrad_full_time_year_round</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Nongrad_unemployed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Nongrad_unemployed]</local-name>
            <parent-name>[grad-students.csv]</parent-name>
            <remote-alias>Nongrad_unemployed</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Nongrad_unemployment_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Nongrad_unemployment_rate]</local-name>
            <parent-name>[grad-students.csv]</parent-name>
            <remote-alias>Nongrad_unemployment_rate</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Nongrad_median</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Nongrad_median]</local-name>
            <parent-name>[grad-students.csv]</parent-name>
            <remote-alias>Nongrad_median</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Nongrad_P25</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Nongrad_P25]</local-name>
            <parent-name>[grad-students.csv]</parent-name>
            <remote-alias>Nongrad_P25</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Nongrad_P75</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Nongrad_P75]</local-name>
            <parent-name>[grad-students.csv]</parent-name>
            <remote-alias>Nongrad_P75</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Grad_share</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Grad_share]</local-name>
            <parent-name>[grad-students.csv]</parent-name>
            <remote-alias>Grad_share</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Grad_premium</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Grad_premium]</local-name>
            <parent-name>[grad-students.csv]</parent-name>
            <remote-alias>Grad_premium</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Grad P25' datatype='integer' hidden='true' name='[Grad_P25]' role='measure' type='quantitative' />
      <column caption='Grad P75' datatype='real' hidden='true' name='[Grad_P75]' role='measure' type='quantitative' />
      <column caption='Grad employed' datatype='integer' name='[Grad_employed]' role='measure' type='quantitative' />
      <column caption='Grad full time year round' datatype='integer' name='[Grad_full_time_year_round]' role='measure' type='quantitative' />
      <column caption='Grad median' datatype='real' hidden='true' name='[Grad_median]' role='measure' type='quantitative' />
      <column caption='Grad premium' datatype='real' hidden='true' name='[Grad_premium]' role='measure' type='quantitative' />
      <column caption='Grad sample size' datatype='integer' name='[Grad_sample_size]' role='measure' type='quantitative' />
      <column caption='Grad share' datatype='real' hidden='true' name='[Grad_share]' role='measure' type='quantitative' />
      <column caption='Grad total' datatype='integer' name='[Grad_total]' role='measure' type='quantitative' />
      <column caption='Grad unemployed' datatype='integer' name='[Grad_unemployed]' role='measure' type='quantitative' />
      <column caption='Grad unemployment rate' datatype='real' name='[Grad_unemployment_rate]' role='measure' type='quantitative' />
      <column caption='Major category' datatype='string' name='[Major_category]' role='dimension' type='nominal' />
      <column caption='Major code' datatype='integer' hidden='true' name='[Major_code]' role='dimension' type='ordinal' />
      <column caption='Nongrad P25' datatype='integer' hidden='true' name='[Nongrad_P25]' role='measure' type='quantitative' />
      <column caption='Nongrad P75' datatype='real' hidden='true' name='[Nongrad_P75]' role='measure' type='quantitative' />
      <column caption='Nongrad employed' datatype='integer' hidden='true' name='[Nongrad_employed]' role='measure' type='quantitative' />
      <column caption='Nongrad full time year round' datatype='integer' hidden='true' name='[Nongrad_full_time_year_round]' role='measure' type='quantitative' />
      <column caption='Nongrad median' datatype='real' hidden='true' name='[Nongrad_median]' role='measure' type='quantitative' />
      <column caption='Nongrad total' datatype='integer' hidden='true' name='[Nongrad_total]' role='measure' type='quantitative' />
      <column caption='Nongrad unemployed' datatype='integer' hidden='true' name='[Nongrad_unemployed]' role='measure' type='quantitative' />
      <column caption='Nongrad unemployment rate' datatype='real' hidden='true' name='[Nongrad_unemployment_rate]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[Grad_employed]' derivation='Sum' name='[sum:Grad_employed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Grad_full_time_year_round]' derivation='Sum' name='[sum:Grad_full_time_year_round:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Grad_sample_size]' derivation='Sum' name='[sum:Grad_sample_size:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Grad_total]' derivation='Sum' name='[sum:Grad_total:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Grad_unemployed]' derivation='Sum' name='[sum:Grad_unemployed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Grad_unemployment_rate]' derivation='Sum' name='[sum:Grad_unemployment_rate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.392947' measure-ordering='alphabetic' measure-percentage='0.607053' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' palette='tableau20_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0psvplb1j1sn7r1fxih1p1v8jctt].[sum:Grad_total:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0psvplb1j1sn7r1fxih1p1v8jctt].[sum:Grad_sample_size:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0psvplb1j1sn7r1fxih1p1v8jctt].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.0psvplb1j1sn7r1fxih1p1v8jctt].[sum:Grad_employed:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0psvplb1j1sn7r1fxih1p1v8jctt].[sum:Grad_full_time_year_round:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0psvplb1j1sn7r1fxih1p1v8jctt].[sum:Grad_unemployment_rate:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0psvplb1j1sn7r1fxih1p1v8jctt].[sum:Grad_unemployed:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0psvplb1j1sn7r1fxih1p1v8jctt]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Turkey&quot;' />
      </semantic-values>
      <filter class='categorical' column='[Major_category]' filter-group='2'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[Major_category]' member='&quot;Computers &amp; Mathematics&quot;' />
          <groupfilter function='member' level='[Major_category]' member='&quot;Humanities &amp; Liberal Arts&quot;' />
        </groupfilter>
      </filter>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Employed and Unemployed Grads of Majors&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='grad-students' name='federated.0psvplb1j1sn7r1fxih1p1v8jctt' />
          </datasources>
          <datasource-dependencies datasource='federated.0psvplb1j1sn7r1fxih1p1v8jctt'>
            <column caption='Grad employed' datatype='integer' name='[Grad_employed]' role='measure' type='quantitative' />
            <column caption='Grad total' datatype='integer' name='[Grad_total]' role='measure' type='quantitative' />
            <column caption='Grad unemployed' datatype='integer' name='[Grad_unemployed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Major]' role='dimension' type='nominal' />
            <column caption='Major category' datatype='string' name='[Major_category]' role='dimension' type='nominal' />
            <column-instance column='[Major]' derivation='None' name='[none:Major:nk]' pivot='key' type='nominal' />
            <column-instance column='[Major_category]' derivation='None' name='[none:Major_category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Grad_employed]' derivation='Sum' name='[sum:Grad_employed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Grad_total]' derivation='Sum' name='[sum:Grad_total:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Grad_unemployed]' derivation='Sum' name='[sum:Grad_unemployed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0psvplb1j1sn7r1fxih1p1v8jctt].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0psvplb1j1sn7r1fxih1p1v8jctt].[sum:Grad_employed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0psvplb1j1sn7r1fxih1p1v8jctt].[sum:Grad_total:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0psvplb1j1sn7r1fxih1p1v8jctt].[sum:Grad_unemployed:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0psvplb1j1sn7r1fxih1p1v8jctt].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0psvplb1j1sn7r1fxih1p1v8jctt].[sum:Grad_employed:qk]&quot;</bucket>
              <bucket>&quot;[federated.0psvplb1j1sn7r1fxih1p1v8jctt].[sum:Grad_unemployed:qk]&quot;</bucket>
              <bucket>&quot;[federated.0psvplb1j1sn7r1fxih1p1v8jctt].[sum:Grad_total:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0psvplb1j1sn7r1fxih1p1v8jctt].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0psvplb1j1sn7r1fxih1p1v8jctt].[Multiple Values]' scope='cols' value='Number of Grads' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0psvplb1j1sn7r1fxih1p1v8jctt].[none:Major:nk]' value='460' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0psvplb1j1sn7r1fxih1p1v8jctt].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0psvplb1j1sn7r1fxih1p1v8jctt].[none:Major_category:nk] / [federated.0psvplb1j1sn7r1fxih1p1v8jctt].[none:Major:nk])</rows>
        <cols>[federated.0psvplb1j1sn7r1fxih1p1v8jctt].[Multiple Values]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1300' minheight='800' minwidth='1300' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='9' param='horz' type='layout-flow' w='98770' x='615' y='1000'>
            <zone h='98000' id='7' param='vert' type='layout-flow' w='98770' x='615' y='1000'>
              <zone h='98000' id='5' param='vert' type='layout-flow' w='98770' x='615' y='1000'>
                <zone h='98000' id='3' type='layout-basic' w='98770' x='615' y='1000'>
                  <zone h='98000' id='1' name='Sheet 1' w='98770' x='615' y='1000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone fixed-size='78' h='9750' id='10' is-fixed='true' name='Sheet 1' pane-specification-id='1' param='[federated.0psvplb1j1sn7r1fxih1p1v8jctt].[:Measure Names]' type='color' w='14000' x='83300' y='10500' />
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0psvplb1j1sn7r1fxih1p1v8jctt].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0psvplb1j1sn7r1fxih1p1v8jctt].[none:Major:nk]</field>
            <field>[federated.0psvplb1j1sn7r1fxih1p1v8jctt].[none:Major_category:nk]</field>
            <field>[federated.0psvplb1j1sn7r1fxih1p1v8jctt].[sum:Grad_unemployed:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E299EB48-250A-43E1-97A9-D1E25E5CB9E8}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1'>
          <highlight field='[federated.0psvplb1j1sn7r1fxih1p1v8jctt].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='1' />
      <simple-id uuid='{E0171C86-83A3-44FF-99BA-9310024F666F}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      UdFmThwRAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9R4wkWZqg95l2rT083D20yozUlVXV02pHzyzVknsjCPJALEAuQfBC8MAb
      MQceuQBB8MrDkENwQXCxOwdiOTs709Pd1V3dXZU6IyMydLjW2s1NGw+RJXqqRanu6Ozy7xIe
      7mb/e2bPfnvv/9///if4vu8zZ85XFPGqKzBnzlUyV4A5X2nmCjDnK81cAeZ8pZkrwJyvNHMF
      mPOVZq4Ac77SyB988H2f+ZTAnK8aHyqAZVnMZrOrrMucOZ+J0WiMpAYAUH0fER9RlhAU+Zec
      +RHC358J9n2Xi+NDpFiO5VzqUwlxHAdZ/vmF6sMOJ5Uuu7s7yKLwQUkYhoWmqUzGQyQ1hOjb
      WI5PKBREEkV81wVJYDIcI2kBBNfGFxVCoQC+Y+P4AookYFguAVXCcjzwbGaGhRYIoCgqeB6C
      4DGe6ASCIfB9AgGV2cwgEAxiGgaaIjEcTxElhVBQQxIFJpMpwXCY2XRCIBRBkaVPfVPn/Hr4
      3oMD/tm/eAzAf2aP2fVs0r93j/x/+M1PLeMTT+2o00CKLbKYCnFy8Bwlvohk9OlOLCRRpFDI
      Ur6osrxSxFNj+EaXZw+esnPvPpNuk0y+yLjfQ9YCdHtjbt26xrDfRxU9pjbEtctynGmHHzwq
      8ftfv8vRy308MUQwAILjYwdDbC+tY3fqOPkwp/s1VraLtMrnCKJIfuM6/rDB+cBkPQp7PY87
      ixovWw43VpI8erLH7RtrTNw0DGqEYxKVicha2uTh3gnf/toNvvPdx/zpH7/F9995wu//7n1O
      nj8isLRLiDaqbzF2RII49CyfwmKRXDr25bTanN8oPmEE+4AoighGF13JMurWMTyJcFBjMRuh
      0x2xvLZK8+yQ5nBGvdFjbXubKCMuGgParQYTWyEk+5jTMYYHhuMynY4Z9fsfllMq1YmLOs2p
      gz6dICoqrmUwtVyCqvJTdZpORkxnBtFklu3VRcbTGYgKquTTMSEblijVugizHlI0w2J+kUw8
      ytnLPQ7PK+B7jIYDTNshk4xyfFZnMZehcXZBOily0fdZKixSKCwiALotsLO1xdLqKopjMDPN
      X3U7zLkiPtEDxNOLdI8OqMcXCNlN5HSeREgFfDRVRJ/WOTw8Z/fmHUonp0TTCwQ8nbEfpZiZ
      EE9mCAWjKN4ELRRGFSAaDjFzRQLax4qTNZY3N5n0umzt3mExl6Ner5PP5+m1yrx4/oTiQp6Q
      IKOqEiAw7tbp9lR2b93GGtospSI0phAUbcRIlKSmMBnrBANBEGWu37oDkzayCoo4AUEiu5ij
      WWuTSUaxXJPi0gaTWQdFCyILoGka8aDMw4cPWVzMYbs+vu/9+lpkzq+VT9gAvwzPdUEUEQXh
      lx88Z86vkAd7p/zLd88B+GNnxqrvEL+7Seqbtz61jM+sAHPm/KbQ7/dJJpNfSMYnbAC92+T7
      Dx5jDmr8f997H9/38DyfbquF7dlcnFfwvMs5A8/zPvz78c++79NqtfCtKf2p9Ynf5sz5Mii1
      hvxP//yHXPzFXzMrtz6XjE/6Ln2JsCZw3ppSyETYe+97PDwfc70QI2FsMKqVqDdbCGabF+cT
      vvb2Dnq3jSnHyeXSPP/J98iu3cUct3hjd5WKrrLf7bEQE3h23uff+ZPfJ6gI9FsVTitt1tdW
      ODk5I5rKEfWnSJklpEGJUSDNoNrl/hs7/OT9RxSLBZaKi7RafZq1Etd3t2gOQBUMnNmI1tDg
      +u41jl4csHNtg0fvP0CO51jOJQkrHgcnVdL5Zcx+naXt6wzbfTIJjXfff0JuaRVv0sNTYqwW
      4hydVljKL6Iks+i9FqI9RYgU8MwBKjYX9S5LG9cQnRnZbJbj/aeMDJ/dmzc4e7mHr0ZZXEgS
      l1x+fFBhaanIrFfFURLcvr7xRdt9ziuGE4PvPy3xx2aP5L0tgsufXcYnegBBFFlMxxkaPkFV
      xpMCrOWyLBYW8XzILW+wWsgSTmS4d+c6wUiCOze22dy+Du6M/Oo1ouEwmUQEBBFFURAFHzWS
      Iq6BbtgAtAc69994g0Gny7233kKydVxRpN/tMuj3MB2T2XBCt1lh6quMxxPAR9cNVNGlXKkx
      1i10fcrYhHt3buFN+wgijEyRlWKRne0NZrpOrT3kzbfuY076KKpMtVxiMtbRIklyi3l2t1aY
      6ZeTgPX2gHv375PQPJ4+eczTgxMsX2HQrjAaj+lNLd566z7Ddg1d18HXQU5zc3uJk6ND4uki
      ku9iGDNcS2dm++D7mKZJNBpl3v/9ZvGJHiCYShEkRSH/wTdbP/PE/PJPq1seIL3L9oeHX35I
      AawVAVhZWf1YwQ71ZgNVEjgv15haDsFAGHnWQwinEIDiUponRx2KuTCa4FKuVDFciWAsizWq
      YIfTBGXwrBmtdotevcx4ZmJXm+SCH9UtIPlUanVsFwLhMKo7pWn+tKs1kkizkF9A7zep1utE
      fZdrN+8wqJ2BILKcjfHufonVTJhatYovBTH0IaNpitm0Q72hEIsnGQwHqIKL8+pJXygsk0pE
      CEorVBs1lotZ5lNqvzl8+jnjL5n1zS3qjQ65tU0G7Qb57W1U0cf3cwiiiIeA4IssFBeRJAlV
      Fmk0O2ysLoJrI+QXsHwFWYwhLbq0emNWdm5yPRDAMAwkQUBUZLR8HlWRaDZabG9vIfgOiigQ
      N9zLeqytAiLZTILZzCC/tkG70SKQyhFRFZKrawiCiKbKfO1ulEhQodkesLWeY9CRMS2fra01
      xqbPQibBuN9l5ogkExFkfFJGE9sJIksiaxub84f/N4y5F2jOa0uj1cYRNDK+ixIPI2nqZ5Yx
      D4ee89riuB7DiYGn93GG088lQ/qzP/uzP/tyq/Xp8ByDo6NTIokE1bNjfDWEMx3hSiqOPkR3
      fConR1iCiuC5KJLEeNzn5OSMwcTEGHcpN3qEZY/jswrRZBJZFJgM+7iiwmzY5rTcIpVM0Gm3
      CYfDdFoNBFlBcB16Yx3Jc/BED8sWaNfOmZgujco5jc4A2bc5KzdIpJLY0yGGJ9GrX3BRqSGr
      GogKer9FozclFpToj01EzwJJZdLv4Mkajj5AdySwxhiuhKUPcUUV05ihygKd3phQUKPfrlHv
      TtEwOTw5Qw0EGY11wqEAzUYLxxhzcl5B01QMy8d3TDrtOqVyFVENEwoodDpdgqEg3U6PoCYz
      NS3KJ8c4UoBQUMPWRxyfVwiHApwcHWL5CqI9pdwcoMoCqiIzM2ZUL06Z2CJBRWQ6HnB8esbU
      sFBlDdc2EBQV8TdkDvTxYYX/8S/e5euP/hJ7EiF2+7N72K6sBzg9PmWxWKB1doycyFE+PaHb
      rFJudKgdP6fU7YCSot0oUylX8GyDge4QVjxSC4uYjs/W+grt/pj15QXOzksA1Cun1Jo9RuMp
      hVyCg6NTLg6e05vOeP74Ma1hH73X5tHzQ9qlKmOjS73Vo97WCWoq6UiEcCKFPtVZLiQ5Oa1S
      rtZo1OtkFnP4nkJcNmn2ulw0xgSsDqVWi0dPjmnXy+gujFpVzusdKucvqDTHVKo1GvUavWad
      k4sy5UqZYavBcamCa/QodV0WklFGvTHFrS2iosHzwzP0fp1HByX64xlbW5sI9pBnz49p1spE
      MwV83yMZDeK7DqWj57THJucv92i1mpTbTXw5Qe/ihJnnc3R0RDqTZjoeEc/kWUgFOSu3WUjH
      qVbK4No0201cKYzZr9Fs9/DUEOBRXFzg/PyIi0rtt86GuTIF8ASJSDiM7UM6ESWgyIiBGBg9
      fCWELEL1/BhRDeHzwSQaKIqMoigM2nX2Dk/xLJ0f/eQhyVQazxpzUetzfnYCgkgokkD0LdKF
      AtWXz4mnch+Wv7Ga57xcB0BWIywvRjgp1VAUBVWRsY0xP/7JI9ILKcoX55yelZBkGVlWkAQB
      HAM1nCCVijCbOawtpbmodgEQA3EEq4cgBRAFn9L5GSfnJSQ1TFi2GM0cSuULBvUy7V6PQDzG
      kwdPMOwpB3t7DKcm6ViIF+UBy9ko5nTA3ot9dBuWFqJU2yMkWUFWZCRJZNI+ozmG0kWJTGGF
      Xr2MD8iyQiKsYbpw7fou1dNjRtMpp0cH1JotZC1CJBzCBzzPw3Vd6heH1IcuQQUEUUKRZWRF
      JR8R0dLL/LZFwFyZFyifjfP40WM2Ntd58fgRsWyBaFglaAqgZXFEiYU33iCdDtOqnPFk/4id
      G7fxph6KBJFIhIkPsfQiv7u+TrM3w7RE3vr6t3H0PrPZlKdPHrO+tYtv63ieRCoZwdeCKL5G
      QgzhL3ZR5TC+6lCv9okmsyiBECFRJbSwxLdXNuj3W9x46w8IOANmrkgiEQVZIxqP4VUPeX4u
      cvP6ErodwtF7KCKEolFkw0fM5LB0g+Rbf0jAHaD7KkupEGO9RCa3ya03YjR6NjTPCKVSRKIh
      5EkX5ABLK3G6zS6xSADXlNAHOooaIhKPM5uOkARIxBMA6H6UP/2T36PVqKOqARJBnz4h+qVz
      1ESaGzK0q01cUSEajdFXeyCGCEkdnh2csJSM8PDZC9a3dkjEF3CtMYKsoUoS8XgCAYimc0hy
      8Bc36mvI3As057Vl77jEDw86/EdCGTW/S+L+zmeWMVeAOa8tX0Yw3JUNgebM+aIclrv8H3/+
      7qc+/j+RXrIwW/yp765MAZrlEyrtEcuLC5xW6wTDCeJMELJryJ0jBpE8w5MScjxGJhpidTlP
      pdng4ugl0fw1hFkTT0uSCUJnMCaZX2O9kOHsxWPkhQ289gleagN/3MXUe0wtWNu+QUazqEx8
      Ll7s8zt3VzkzJBp7p6zubjKolzFcgY1inqNKiUh8AWlcI7P7ddovf0Ri5T7T+gHRpS2mlX2O
      mxZv767hxtOU9p6BEmQ5o9G0Y8T9GcWtDY6fPWTmaKTTQSLRBIPekF6/QyKdZVo/oeNnKaZB
      N3yKxTSl0pRbG0keHNdIqTYzIcqbd65fVTP9RmPaDuXW6FMfP5WamLr2U99dmRdoNPO4/8Yb
      jKY6X3vrLSKShxCMog976KaNKHgIogK+h23b4HuIapitjVU2N9fxHAe4nAwJBDRcxwHPxlbC
      6L02cjjBpFPDtG1CsQxv3tml2+uC7+G4LplkmItKA9txcR0fzzKJLyxxa2OJ7mCIrGn4nkso
      tcCwdoHt+3i2AYEI406PrZ0tVjeuE5Jc9F6N3PW32VwMMbBkXH3IeGYAENQ0kCQWc4s8f7pH
      vpBDFgUkJcT17VU2dnfh1bX4goTkmtR6IyIhFU3TkCRpHkD3K+TKFCAouTx68piQqvCThw/p
      Gw6SIKFaA8RoGoDM4hJv3LmJ4Oo8fPocQfqY9goCkiggyAES0TCaoqCPujSbbZrNJpYrsJZP
      Umr2GfeaPHq2TywW//B0LZrFmfbwfNi4fouVYo5u/YLnJxdEw1GSiRiaqoKo4owbhFMFJoM2
      jWaXRquB/bGnUo0vUH3xHkeVIfGQxMpynkq1CYAH2JMBlhxkZXUZWfCQJJn+4KP10QICknjZ
      FOlkhM7IIiALgMBkMMD9lbXCnCszgj9YICOKIr7vI/wcB7MgCJfH+v7HlmEK+P7lvID4S6Yl
      P355giAi4P/MN6ogCPieh//q8+e5HhBe+ckv6yeIIr53uZ74g+u8PNZDEMSPn3x5faL4M2Ty
      ie/nXPL9hy/5n//lk099/H8lPaWgL/3Ud3Mv0JzXlrkXaM5Xmu5Q54cHbbY9h4zok/rGzc8s
      48qC4YzpgBf7h4RjMY4PXmAJGtaogyUFsAYN+pbH6YsXjB3AsdFUmV63xYu9F/TGNuNejfN6
      nwAmB0dnhKJJVMHhot5GFTxm0wl7Bwe4rsvhwT6t/hRZUTBGfRxZYzYZMWjXOa91SCQCPHv4
      DFvSwLXBMZjNZhi+SL1SIxqAoSXSvDikNTJJJWPgzLiodonHZC7O2wRki5FusP/iJXIwTFgT
      eP74IefVPr435fi0hBYKgSdiGwOePz8ANcy4Xabe11H8GQdH50QTMSoXVRLJOCfHRwiewcRR
      EI0+jf4Ux/UQfBtrMqE1nmGbMxTXwhQUyicHjC0BlRndkYM+qPN8/yWCEgLfYdxrclJqkIwF
      KdV7aL6D6dm8fLGPFIwSCnz2cOKr5PlJjf/1Xz0i9eKEyHGZ7B+9+ZllXFkPUCrXuX7zBvXT
      Ywpbu9ROjwmrMDNF5P4ZRmaVWHqNyahGe6oQD2vorkQhGyNSWKdy9JiFdJahPuPO7iaHpTrb
      hRT1ygWukUFxIZhMEU2kCNhjKOzQLx0jWGMky8JzPAxDYGNR47TSJlvYYtCtYkg+piNyfSVO
      RZeon58Skou0dIFQOEtEdPGBXqNFdzBlqaBROrlAJoYhx1nZvE6rckoqeYPtpQQ1aQ2jc8RC
      Novv6kwtGd+dEo2lCMs6ZSvEtbUMR0cn7O6scFoqM2h0SCWDnJSbIC3hu1UG5hhb1pgYMbJR
      CWdgUxp3iAZCBBIBuuMRQnSJQjZErXTG2BK4cX2L7tgkn45RqV4wmXlsFeKUKxWq7QnEIzia
      B6E4AfWrORi4YuvqA6Pwct2sqIQQjS6+FkMS4OL4BaF4Btd1sCwD52PuEFGUUBUZ35zwvXd+
      RCq7AEBxeYlquYKPgKzIHzMgBYJYmIEsg0qZWCp2mRHb8xHw2X/0Ixw5emm4vsqEAVBY26R+
      cQqvjOd+p4MHVKolxvUyjbHF8toq5fOLn3uVgiCiKspHgWSCgKIoSKIEvoePj+8Dvg8CZDMp
      9g9L5HNJQETCxZM1ZFHAtSwMXccXRdZXcpx/kA1BeOUY8Gwuzi+oVUoY9scTegmX1/DK5Fte
      XaZaKhNZWKYQVylX6p+/GV9jrkzt11aKHOwdsLmzTfnkJcnFVaKqQNwJg6LiCCLFry0QiwUY
      hwUOL5pcu34ddyajyBBQJCqNNpsry6xu7dAbThHVEKmUirrtEQyHOT2/YKSESaVzIEMkl0Pz
      QrhBgUQkhR8fc95x2NkqUswWMI0xkhInrApMDZtUOACKRDS4ixzL06seI4ejSPis7tzibjxM
      fzhGyUUIBa6jRkKcnx6wsrl9GTYcyZIWJIxZgEqtxvr6CpXzfbLFPL1uAzWyRTo44qzaYaWY
      4eC4yva1TWzDIRQfEQxpCIJMQHQYuwqy4DMbthlaEuv5JJ6mcWvbQo2lyGgRWmcvqXlxbr/9
      TQKCg+t75HILCKJIMr1AZDrgtDnh2sYyM1cmdGMb1bco1TusbF67qkfhSpl7gea8tpyUapy2
      Zmx4DikRkm99diWeK8Cc15Zev08yngDh883dwBXaAL7vYZomnu9jWSau6+G6Dp7v47kurudh
      mga2436YUc51HQzDwLRsbMvCMC0818F4Jcf3fUzTwHFcHNvCtGx838exLWzHxX9VluO6OLaN
      aVkfyvV8cJ3L8l3XwfM8nFfnOM7l/753Wa8P6mOZl/UG8DwX17usu+ddTvK5zgdl8FHdXh3v
      OA6+52EYBoZ5WQ/HvTRyfM/FMAxcz8cyDWzH+ag8z/vo3rmXxzmui21ZOI6L69hYlv2qvh6O
      +1F9bevyPvy28Py0yZ//9/8bvvv5kxdfmQ1QOT1kYLikwyFqwzECMglBx8usIbf3GcaX0S9a
      CGGVVDjI1voSF40mtdNDYku3cMcVtOgCAQxmpo0SzbKRDfNo7yWyFEAWDbAd8ps7nJ2UkARY
      XUpTaY3ILuQZtS7wHIv01pv0T94jtnSXQfkpqZVbdF++R3Rjk8OXbf74m9v86799xO3dDRLK
      jL2uSl6xkEMSg5HFQr7IYibBxeEeVjBDzOrQIEXYmeK5OrYnEEkXWUqFefz0EbIS4fbta7z7
      zk9462v3efLOD9E2r3FzIciPn1f43W/ep9uuUK70kUJRjF4FT46ytZzioj1ClDSSmsvYhGhA
      pj+zKOSSnBxWyK8uMWxUUGMpYtEQUdfk/YbORkQhlo1wXumRzi6wVsz98gb6inBlPYDhSty6
      cRPddnjjzh3iARk5lsad9nBQ0WQR27Yud3kB8EHWImysr7K2uoTvOBiWDb7PZKqjaRrgY9sW
      kqriuw665eOOeqzeusdGLkS5ZbK2kqPX7+O7DtOZiyZazByNbqtCNJVF79dBjSALkAprvDxr
      srR6GUIrKQHiisdAt5kaPoWFOL3BAN9zGeg2k14bORhD9abolkswkuTm7TuY0z4gsLS2xXI2
      RLVcI5EMUR3YbKyssLm1SqXcIBHy6esO+D6WaaFpGo5t4AoivYnNvTt3iCoCBjK3bt0grIqY
      poEvhkgnNAzTJZfLMJsZr3xWIvmERn0wo9+bsrFeoNfr/7wm+UpyZQoQD0k8fPSQWDTC+++/
      j+5LBBSNsOAQSC+iyQpbu7d46+4umuTw4NkegWAYWdUQBVCUy8xuaiTJjetbSPgIosz27m3e
      uH2dhcIqG2sFAokMlWfvc9Z12FqOcXJSRpREkrllNtZXmDTKBFJZ8D1kLYzomiRziyiyQmGl
      wGRqkQhqlykeJYXi8hL6ZEwqpnFeaSGJEq49QZSDBCUwfJmV5SKj8QR7NuLRw4ck0nkE4bLX
      qw1cBM8mmrgMxpM1Dcn3cBCIRSKMh0MkLczte29wbWOJta1diqkI6USYB++/jymoJDSRhw8f
      Y7iXaep9x2RmebiuxXQ6w/dcRFFGVFSyxTVcvc/CYpKjwzNEaR5X9HHmRvCc15b3np/Q+Jtn
      /Af/zT9CkD5fvoq5Asx5bfkyguHmCjDnteX54QXf3ft8+wJ8wJV5gYadGielJusba5wcnxDL
      5Il4OnKmgDSsMFJT9E7PUZJJsrEwuWyKZqfFxckZofQyijtgRoilhEal2aWwvkMmIvFib59w
      pkjIm9AYWOQLWdKax3sHVVbXl+nX2+xsLjJwNHoXh4jRLP6kjUmIG7evzcNjXyN64xn/5r2T
      LyTjyiyiZnfCvTfu0W+1uPPmmwjGBAePbrtLr9NmZs9IZFcQHZPRcITvOjiCxkoxy9rGOrPp
      ZS7Iqe1z4/oWw34P17YwTJdEPMLY8Ll3ZxdjquOZE2YOgAfWjHKlTrd6QaCww/Zaken08+WV
      nPP6c2UKIPkO/eEAVRSot3roloMoashWF0JJBKBROSebX8Z1TLq9Lq7/UXVjqQV2NlbAnvH+
      g0ckUlkkVWNrZ4vKRQnHnjEYjHDxEUSRtc0dMokIkUyeWa+OEAgz7rYZTybE0jk2N1Z+69L+
      zfnlXJkN4Dkm5xdViqurdKolIpk8AelyFhRRxBMERF8iEFCw9DGV1oDVlSUca4akhug2SgwN
      WM4vEAhoTKc6oaBKuVQmsVAgIFhU22PyC2lU0ePkokIyu0g0GAB3hiOFscdtTCGIaI4YGbC+
      OVeC14mP7xT/eZkbwXNeW6qN1mX27S/A3Oab89ry8WwaABHBIOp9tPWVqClomfjPOvVDrkwB
      LNPAd20cMYjgXy5DrLcHFItFeq06sWwBV+/TnzisLOUYDsckEzG6vSHpdILBYEgkqHBRaSAH
      wuTSCVRZoFJtkisWmU3GxOMxjJlFIKjSqFYIJrIERYdWf0o2nUDCpVRtkMzkEH2XaCSE48Fs
      1MUSQ2AOGVsiKwtxqu0BS0tF5N+U5PhzOK52f2oI9PvqC/5k/FHmt/BmgfX/+h//QhlXZgS3
      Ww3ajTYHJ0dclC7otXskMml69XMcOcjZ0RGd3oCwanBy1uHJ0yfokz4/ebKHPenyZP8EV1CY
      DYaE4zEajQZnJ8doQY3j4zNO9x/TGAwpXTSwxg2qXRPPNjg5uSAU0ui06gzqHZRUipAq8vzp
      Q1qtDpXyBbWejioLDEYTMqkEh4cv0TQV2/7tiaScc8nVBoYIEgsxmfbIwrV0Ts8umOgu2YUs
      QVVkNhnxfP+CdDrKYjrM4Umd7EKGcrmEO2pRGVpEQmEikRAADjILCwtIgksqv8qgcYEPqNFF
      FiIu9XYbKRAhnUy+yifkUDo9pT+aUlhepV4pYRomyVSGRCzKqN/mtFRle2eHRrWEbjpXervm
      fPlc2RAoGArjuwLRzBLN1hOi6WWK2SzOpM+Lxw+IZYosptKsrwtMLJPs4jKt7phsNAR+hN/9
      45s0Gn20WBQJCIfDJMMKD95/QH51CxWbVEimMVNxZ2PaQ51EJk/AHfP4+QHFXApNdVH7QxBE
      orEEAc+GxAK96gmTyQLhUBgD6Lab+EgoytxH9NvG3As057Xl2eEF33na+PD/63KNG8bH0l8u
      JMj+4f1fKGOuAHNeW+aZ4eZ8pTmp9vi///n7X0jGlSnAydP3CK3dwag8gdQNxPEFcqKA1T3n
      qDpmY2uD1UKeaqWMa44ZGj6FhQjNocJGVuagNuBWMc5B22Q9pfLekz22b9xEFTTMcYO+JZEO
      CnRHOls37hILzMfvv23ops3LcvcLybgyBVCjCUatOp5lIFs2vi9jDvrsbG5iKBOCTHjy+DET
      0yUXlwAFX5BwjAmtoUxAhlpvSlDwiC2ss7wyYq2Y4fy8iSNEuH97jUbpBF+QUaS5737Oz+bq
      3KCCgjBrosYLWHqPaq1NvV7H/GCBvxzkzt175NMxREkmHAohCgKJqMJwJqCKPu16hUGzSq1v
      fkywgmP02T86BUkmIBp0h+bPqsGcOVcYDOdephwRRPHVPgGXaQIRxct0ha9yvXieh+c6WLaL
      FtAQudx0QrjM5I8oClym4PeRJBHX9RHwMC0HRRaxHI9gIPBbt7/tnNc0GM599eDPmfNFGQyG
      xF7tlfx5+bXbANarZFRz5nxReqMpcvmc+N37CJ8zRuvXvj+A82pDuLP9Z4ixNIPyAQM/wqxT
      YiZoHLz3XX743hOkcIJEJEyr2aRZPuT7P35MJKTQ6ttEZIO9sybZEOyX+zj9Mn/1N9/F8BUU
      UUbvV/nho0PiAZfv/fAB+ZU1VNHnxf4+6UyWF/vPSCfCNPsWD7///9KzNBazSWx9yHf/7h2i
      mQX2H/6QzkxEnDYZOEHEaZ2z7pTD935IqW+g4RGKRuhWT/irv/5bTuoDjH6J92hi0e0AACAA
      SURBVJ4eEtUE/u677xJfKBAOyDz8wXfoGBIBb8w7P35MNBGD2Zi/+rf/lpkfoFuvkErF6Q4G
      NM8PeFkZMKi+5N3HR6xvrM0D8H4OL04beH/5f5L5vT9C+JzbSF2ZF2g6qNF4GcWuvo+6nIH+
      OXLM4q237zF9NsCftDg7nXF8fEomE+Te3dvg9nm2V8UpapRbI5RpjNrM4ca3vk6+2eH+zSKP
      H5cZD9p86xtv8+D7f8P65i6C52PpQ86PD4jm1qnuP0ZWfJrjBKncOtr0nNJwhc7+c+5/61sM
      S0eECjfoXbxAD0cRvH2qkyZGMkssswlmlSfP+vxBYZFad8zbGwt4175J7fF3uXPrBrrR51u/
      +w949uwpua9vc9Fy+cZOiOd7L/jWt79OvXKGrZskVq+xvJjm4Xd/gC0GmfVLEEhz/9Y6Dx+0
      uXd7d/7w/4q5Mi+QGMwhTE9QQhkcY8jjp/u8//AxH2Z59Bz6/R4z08axTXq9Po4nkg6LVEce
      yZDM3vOHHPz4J7SMj+eG9BEECUkUeeN3vsm0sc95a0b55UMu6j2e7R+R37xJ53Qf99VITFVk
      HI/LPQVebUuqyNJl/n5BRvFNXC2EKsDh43cZelFiAR/b1NHNj8q2jRn9wQB7OuL/+ov/nfTS
      FkhxvvbmBo+fPkMQJSRBfGWQ+wwHfaYzk+zaTfoX+ziejyTLiJKEZczo9Yd489Hir5Qr6wEW
      8nliQ5XAYo5xd8L2f/pfIOlNDMKsFSXCapKteIpCvoY+rLN/USH79hvsXk8zNCEgzlhZ2WIx
      G6A5mrG6vAYo5PM53JjPd955j2vFKM2JxrdzQUbCdf7pf/mHVCtVNFWlmA3T8iLUnv6YSeEW
      X0/KGDd2+P53/pa7X/sGJ0/fQ02vsrwQJ4RBxw2gSg7r+U1yuRTDVpnv/Nvv8Na3/4jgrIWv
      QCwSpFyp8db9O/yTf3KPRrsLnsPhwUsKqzcpRl3+9rvvcO/eTcIRB+fkJ/SGefL5AmuZGA0n
      jN875b2nh8TDAS4qNW7cvMbl5hZzfhX82r1As9lsbgTP+VK4qLVZaF6Q+sa3P7cN8GtXgPnD
      P+fLYjAYzDPDzfnq8s7Dl/wvf/kUgKBg8T9wiGEWAdj67/7jX7oeGK7QBjh49pCpJZLJRHn2
      9ID73/g2w8oBofwO/uiM5wc93r61jhUKcHZSo1hYpF3ax9YWWcnGCEcVTs8bFPMpTs5aFFdX
      2FzJUzl8wlDOEbHqTLQ8sjHEd6ZMTZd0cYNiBN599pJgMEoqLDIYm6xurHN2cEA8v4Iq2Jij
      HhNLYnc9Tos8nZfv44kyhdVFLk5HrCzKpJZ2KR08YGZLrK/mODitsrK2jK179JonSJEsUdnA
      kLJI7pCgBO2xTTapUamP2djZYTEdu6rb/1uB5/uYr5apCoKD71v41qtVe5/yvX5lXqBMOo3n
      uWSL62xtbZNPaDhymFGnxer2Nba2rhMPKcihJHFNAEll+/o1dra3kUUYTHTuvnGfQqFIMiJf
      7urouwxMCW/aQY4kEfQ+lucTiKW4/+ZdzNEIENi8dotsIvjhGl9H75HdvMfO2uXbI51O4/ke
      +OA7A+L5G9y6scpoYJGJSLRHs1fXkML1PDqdCXfffpPiwgezkpc3XwwkkM0BpudjejJvvnGH
      iDaPQP9N4uo2yDBNRM/CdHwURWY2GWDaPpZxuauKokgIkoRvm7iCiGkYiKKMJApIskwmEePp
      owfU620sX7jcTmk2xrRtTNPEdATW1/K02kNsfcijB0+JpFIIApwf7dGf2AQDKggCcjhL7/wp
      h+dVZEnGMA1wbCxPRFaTTNsv2TuokFqIs1BcZjroIwgfXINJLJPg2XsPqLYGyLKEJF0+5LIk
      sb6xRLMxIKzCg0dPmNrePC7pN4i5DTDnteVHT4/5879+CYAmWPy3nGKal2lR1v7pP0JN/fIh
      5ocKYBgGs9nsV1jdOXO+XKbTKeFw+AvJmPcAc15bXhyX+fFh5wvJ+IRFNuv1mGoak2aNpbVL
      g/OXYUwG2IKK7wuIrkkwluCXLsLyLPYPS1zfWefg8JD15UWarSHlaoXi2iqxYBLF0fFUj5cn
      NfJLq4S8CaVGj81r1ym93MMLxNnMxzk8q1D4IBVKOk31/Ihmf8burZtUj/eY+SFy6QiJZJzB
      2GQhneD86JCFtU2aZy/Jre8w6vUYtWvM0Lixex1FEjg6OGBtZ4fy4R5DE65d2+bs8IBoNk9Y
      1QiJFqYg8OKozPLyKsKsS2tosbu9jO4FSEdE9p4+h1CSneU0L/aPSeSKaKJPRJMgFCeiKb/k
      Rs35eXSGU/7VOy+/kIxPKIDv2Rw8O8CY2cxsj61sgKOBS6fcAEUgnshgNA9pOUk2F1T6fZPl
      tQwT26fTnpBPxnHLh/z4wSFvvnmb89qYf/in3+bvN/OwWWdimJiuj95vUtUUApE86YzJ+lKK
      H/zdE1xdZ/PeJms379A9P2ImyNy7c43DkwrRVAFdH1BudLl37y6Hh8cEAxqpZIixqXL3RpLD
      vadImVXkYYdwUOLdHz3kja/9Dvg2ljmhVu8jSQIXx2cgQTCSphiVqHWGrGY0HGNMpTVFDMRY
      TTicn5ySXtllIQY/+cFPwJqxfG3jMkGrazJ1VW5vJjmv1lCSKyjDJsmNG1A/5cVZnaWVAqOZ
      j2cNeV41ePt++gs13pwvzs94v0tcu3WH9eUc2DOe7h/hI7JzfZfV9W0SYfDEGPGgTDCR5cb6
      Eo7vk8ososkCvueBpLF7Y5d0Ootq9xkbnyylVKvhTRucVoZkC6t0ahc/9Xt+ZZPt9SXwHR68
      8120eBbXMdGnE5AVahdHhOJZZFx0Y4bjXm6+7foijqUzGU5QojFm0ylBRUCOZlguLhINyIzb
      NSp9g1r1HEEKEpVNRqaL73uMJ1MURaZdvaCt+9QrpwxaFR7u18kvxNAnY0zLIldc49rWKoIA
      a1u75LMpbHPGZKKjyDKe6yIHFMaDMRPTJqL4OFIY15iQLyyQXSgizd1BV86V2QCTyYRIJMJ4
      PEaWZRxzihRM4NoG0UgAXfeQPAtfFhGUIMZkRECGs2qHra01LMMmFArgOSaHR6esbu7Qr58x
      8QIUkhq13oyt9WV6jTK9mcD2xjIzXScUCmHMpshqCGM2QRQlAppMpz/BGnVw1DirSzlm0wmB
      UBh9OkUURTRFYmZ5DNtV5FiWaEBDERxc4OXhCen8MgnVvSx3JcfLl4ekFtfwpi0IpllMRzk7
      PiSULrCYDKFbEArMhz9fhNdySeScOV8W5VqTnv7FHt9P2gCuyf6LA3KrO6RjQYbDIfFYDNOy
      MAyLeDz6c4UNuj1i6dQVZ9yd81VBlSVyycBnPi8kWAS8yzxRn1AA15rhyxLj0ZR0LEi/3yce
      DdPqdOjWymiJHIuJANXOhEIuSW8wISBY6IQRjQnhT60APuPxlEgkTLtZQ4sk0QSH7mBCeiGH
      b81QguHLsIdum5ktEFBBn1lE40nCoQCObePZFko4gmtZCIKAIkt0Oh2iiTQBVWY8HhONRi7L
      CgexHJdxv4cSihGLhsD36LRaRBJpRDwEUULEw/V8ZFnE9SQUGWzLod9rI6ghMvEIM9tFcE36
      wwmhSJxwSEPwbHpDnWw2xXQyIxyUcVBRRJdWq0M4HGI4GqMEwsQjQTRZxPKg22oTT2fRJB8P
      6LTbBKMJRGeGKwZIxiOfuZG/Crwsdz7XEOjfV/b45iQP/AwFmE51XNOm5/ZYLX7gpfCYTGfE
      0nlEZ8Lj52cE1Ag10WFjdZPjF48od+tcW1r8++J+Lva4xXvPqvze1+7QardxGj3iERU1erlB
      3tnLJwSLd1jLhak3WmQWCoiiRbnUZGXJwxezNMtn4JoQzOIbU7SgSlBwmAgBArZDQBXYf/Bj
      tr7+B5w/e0Bh8xp9fYo7soEma7s3GdfPMMQwynTCcDrEsiWCgoknaiSTIt1pkqW0R6uto4oO
      1XobwRxS6sy4sbVEuVRm92aEWqOBPugTjQQ4s3RKLy5449YC/cAGwf4xfSGEKCs0S2Xyuzc5
      PzvlWiFKbQKDgUuzfcByNoqhhJjqFuGowf5BiaX15bkC/Ar5xMs6FIkhyioLqTgg4BljDi8a
      5BYySK6OqyW5d+saoViMwmKBoKYQj8fZ3Nwgk1v41JvMnV9U0Ywu1bFNr1Vl5kn4lkG9WmM2
      7dIY+9RKJ/iAPh5Qb7YJJ5IkEimCis+LZ08pN3oooQSyNcB4tXfFzPRYXioSDQfQ2+dMlQgX
      x+ek8sv0GxV8IBJPUkzFmFouY9NnbblANKwhykEER2fqQFj9e7dGEJgZNrvXtyiXKwx7bVDC
      JBMJ4uEQ+C6SFmVppYijz1hdLXJRqgGQXV7Dn/TQHYFUIkEycTmMdN3LSifTORIBFQvA92g3
      GwynPivF+OWqsjm/Mj7RAyiBCLdu3fzw/43rtz/8nEp8lIMlmf3onNXN65+5YC2S5O7aJt1u
      n+u338KaGTiOgWDMGI9Nbt6+xWTYB18gGAxyGeQqEokEUQIKd+7dY9BuIikq6cUUT/YrBINx
      oskwzx49ZGXzOrap8NbdW3Q6XYLBIImgT91Q6TdL9EMRbhdVYotJ3n//ISurawQ0jaig0HWT
      KJqHLEPtbA9VWkPydM4qDXQXkgurrAd8xjOLcCQCgkAwGEF2ujx4dMD6tS0cHSS3gyoLTEYD
      DMcnLonIkQgioAgu7x92uH17jUePnpFcWCATCGCKMqoigWvR7Y9R1Pnb/1fJz/QCdTstYskM
      iiR+uIJLmPus5/yG8eTgnH/9oPKZz3tTLnPNuFxJ9gkF8D2LgxcHBOKLSFaX0cSm1umwu7lG
      c6Bz5/Yt1Hmi5Tm/AXS7PcLRXxzxKeIh44P/M1wzovDJIdCk06DRnyCNLijkUty8tY18fEIk
      pHFWqWOYDmroy1jU4WNZNoqioE8nSGoAHAvb9QiEwoj4iKKE6zoIgoCAjz4zUVUZ07SQFQ1Z
      9LA9gaAqM5nqBIIhBHwkUcB7tYWmZVmoioJl25cztL7HbDZDDYRQZQnfc5nqMwIBjdnMJBi6
      lGGbxmVdAgFEScazTRxfvBye+B4z0yYUUHE8LnOQWg6apn4J92XOp2XvvMU/+xf/5hcec1c9
      4j93euiz7U/8FtosfFIBtHiWf/CtZWxzBoIIokQyFkbUwqysrBEOfjmvf2fa5XsPz/mDb9xj
      f+8pyBGK2SB7px1+53feZtSpki2scXJ8QjCo4egjTF8jnY6x/2yfnds3aJaqyKJLdilPqTwi
      EJQJSR6KIpMqrBHTbN75u3f59h9+kx/+4B1u3bjJeDyiM9EREbl75xaVk5cYqKQ0h/OBQEiV
      iQQkgorD3n6Nt24W6KpLDM73SOaK4BpY4z6OFGQxqvK0ZfL2SpAfHgz5k2/f/VLuzZxfH5/o
      F1QtiCwKBIOhV1mVBXL5JeLxBGsrX178SrncIKWYtHSX2XSEI8jkCkWKS8tEgwrObMyTxw/p
      vlp+mM8XMPUJajjBUrHIYkwksrjJjZ0Cvb7OeNhDVAIs51O0pz7RoEKvfEYiF+WsMmRpeYlK
      uQIIFJbXSccDOI6H7Stc394ipEoM+z2UQBCAXHGZYnGZSFDGtcckFjZYe+XmzRcKGJPJZe+j
      iFT6FsV06Eu5L3N+vVzZpK0nSiyurjDttNm6fpvFRAjHEwi8GkaE4mnu3btPcSGBqqpMJmN8
      wPN8tICGEEhjdY55tN9kuZji5q3bRDQJNRyhuJhDAEaOyGI2j2APCUWTxAIiKCql431GM1AV
      kURI5sGjx8x8jVu3bqJJAqqqASJaQAVJJRxKMu2ccHBS+lhdPJAU1goJdFshFNCu6lbO+QLM
      Y4HmvLa8v3fK//PO6S88Zlup8u+6Qwxz+RO/BYqZuQLMeX35MnaJnCvAnNeWpy8v+JundQAU
      3+cfO1MA5ESExX/v659KxpUlqRm0q5yWW6yvrXJycko0vUjEnyJnlhAHJcZamt7pOUoiyWJU
      otLss7K1Q7d8iqtEyGWjmNMpR2cltq/dIqAKjDp1uhOb3a0VDisDNhJBpMUcYcHn+bMX3Lh9
      nb3HL7m2nWfgCJT3j1ETKW7vblE5fUmrP2V9cx3HlVFcHde1Oam3KC4sUD47Rksvkwt51DtD
      Nq/vcv7icrnjbjGBGUpSOXiGllhka7VwVbf1K8VgMuPvHp0DoPk+v2/1Lz8vpj61AlyZEdzq
      T7n3xhv0Ox3uvvUWojXFFQR6nQ6DXhfDMYimCgiuyUB3uX//Ft16jZlpEYnFMGc62eI6udwi
      i8kI+riHrcR4Y6dIrdHE0Mc0mj1s38fWBwh4NPtTRN+iXKkzNQ0y+U1yisPABhuZ/7+9M4mR
      JEsT8me771u4e4RHhMceuVdVdnb2zPQsGgkN4oY4cEDizoH73BDijuCCECduwAUGISGQQBrQ
      bPRS1dmVe8bu4fu+m9tuxsGjsqp6qqsKsrtiotO+S4SZPX9m75n9Zu//3//+f2+zwGQ64ejl
      c37+9CWLmY4TBIiRBHsbq+webKNbIo8f3afTaBJPF5BxcM0Fk1GHVOl2+PDfMK5NAOTApdfv
      oUoC1Wabhe0iiiqyPUSI5RCAUb9DqbxN4Jh02x0EJcrG9jaTbhPX/3J9gqRgzSc0O0Oimkpp
      a4d27ZIAaFxeMjNM2q0GiVwJa9zG9WExn9KdmUQlcE2d12dVMqkE5f3b3D3cQUBic2eHbPIz
      E6eIZ+u0W22kSJRxt8bCFvADkLUY00GL0WT2HfdkyLtwjVkibRqNDqsbG4w6DWKZIpoEge+B
      KOELIAYSmibjWgtavTGl9TVG3RZCJEUqpiIrGpZpENE0HNfFsxeM5g6lQgbbF3H0GZF0Gtcy
      iUQiGIaBKMrgWXiSxqjdIp4rkklGsSwLVZExTBNJ1hAClyDwaLW6pFdWSagCghrFt3W6gxml
      UhHXccF3QZQQFRV92MWTY6xkfvmioZBfHV9cEqkFAf/0C0Ogwz/+B9+qjlAJDrmxtDo97GC5
      rloAisFVoFxZQit8u+yRoQCE3FgarS4z591G8ddmBZoM2jS7I8rlMi4ymuChRTXqlxUSK+tE
      leU6AMMwEH2HWmfI5sYakqTiWAbReBzTMIhGo/iuyUT3SEYFdEtAk30ULUrz8pxorkRUhlg0
      guV4BLaBr8aJqQLViwtShXWcWZ+R7rK3v4cieAxGM1YycQYTg1REwgMq1Qbl7V3iEQXj6ryG
      YdBv15lbPmurBdrtDsXSBpN+m+RKiUI2yWAwIJuMcHRWRYkkWCvmSEQUDMenWb0kXdxACwzq
      nSHlnT0SYaSIb81Zc/jOUSGuTQmeTHTKOzsw7fLpyQXNap3LizPUVAFFgk6nAyz/npwck06n
      mA47zAyPRrWOD3Q6XQD6jRoXzRYLY8LLp29oN6tcnJ0hJfNoEtSrdXzbojca02pUaLR6NM5P
      iGSKyELAfGGztbmOLMBiPOD49BzbnvLkyRtGrUv6ox5KpsTp8TEB0Ol+dm1dimt5XFsg0Mdk
      1ndIyQ6umqbXuMQxRzx9eoorR4hjE88XqdeqYE3oDLp4SpZWvUJ/PGNne4to6Gf+nXN94dH1
      MUevX2O4IuV8gnp/hukGKL7O8dmXg2TdvnOHeuWMmb7g1fOn1LvDt8eCIOC8WqN/eY7uiWyu
      pqh3J1iOhxaYvD6tAMEyaJa9oFLrclk5x3BBcuccX1SZjrocn5zjBNConjMZ9umOdPb31jmv
      LCdaIrEEUUXiF4xPqFoEVV0uiD89fs1wtqB28oK5r9I4qyCJI45rMyKaiqYt/YU8zycIAqrH
      zzCCKK4x4/WbY+am+2vs8ZCv4tqGQPFEgvlIR47GKaRX0PtDyutFjo8vyBQ2cPUur04qFLMJ
      +t02gaiSyuRZ27jFfNRFADxjyqvjc7YP75FLavRmFivrZebGlK3NVY5PL8jmVklJFp++OmJr
      e4ePfvC7YE+RZIXzSpVMYZ1g7qA7AAGJ4hZ/50GWVrtHKpsnmPeIRqIcv/45axubSIC7mPL6
      pEI+mwBBIp1OoCgyqqiDpPLR4x9izwb4JPiDew9pt1pEYmkkEVJRmSdHTe7e3SP527+HOesh
      +Alm1vy6bsV7TagEh9xYXpxU+ctX3XeqIxSAkBvLr8IZLkxYFXJjOakP+Q//7ifvVMe1CcD5
      m2eMFiLZtMJ4PCO3uk6vXiWeW0My+6TKd1mMO4iOwcQMWMlkWdvaoH5+xu7eHkcvnrJwRG5t
      ZfnpcY+DvU16lXM8WWOjlGU0FdnKwKuewZ28xqUus5vxOO0EFOMe+fI+g3aD0sYGzqLPz990
      ub+7wo9/+pStOw+IywH9+iXbH/6AUbvO7u4u1eOXBOkSwfASIb+HOxviGWNmhkd5/y4rcYGn
      z17gSxHWcgleHp3ywf19Am0Tf9JEEG2aI52DcomXpzUSyTQP79+ievqakeGxns9SabZJZIp4
      oyab9x/Rfv5nxA4f03hT5/HDLX706RF7q0k6ozmr5QOqx895/Dsf0m76FFZcnn56wc6tXdrV
      KjYyh6tp3vSGrGTXcCcNXDlBqZgjqkU5OT1FTeaIB1Ok9DbeYsDu3j6NRoONjQ26zQtGpsKq
      YlF1NeKBQzYmcd7oUyrvYs+H7BaiNII1zManxAq3ka0u1c6I9e0DWidPUbPr3L+1x+vnT3CI
      kU4GHB+32d4ts7axhT7uo0/7THWH9d1b+OaM+aiL7iqUCgma7SEbu4es5f767LppO1y0xu/0
      HF6bFch1HJBEfM8nHoviOjaOu7SCRJM5hu0almXjCAoPP3yAvxjy6ZMnNPtT8OYIkVXiooPt
      Old+QQGCIKNIArYvE9hz2jOLpOLTndlEvAW+KCM6OqOZQXB1DQHQaQ7JJmTEVJGdrW32ttdx
      HId0oUCzcoHt2BB4mCiYkyFqNMO038K0LLR4lkff+5DRoMN8PmZ95z5bxTTx3Dpb21uUcnFe
      P/+UN2fVZShHAN9DUqPgewSAhcLDDz9gMjd4/P3HKJ5JPJtm0Gnh2i6OHyB5Ds1On2gijulL
      PH78GGPcZS2f4qzSwHE8fN/D9wLM8YzV/VvcXk3Rn5tE4nE818FxHAA8z2HQHVLe3cG2DAQt
      jTFsYdj25/cGmOoOgaPjexI4MyYLi/7UZG+ziGmY2LYNvoPjenhijNm4y0h32C6tYBrW2/MB
      aIqCIMuUd/bZ2tojG1Pw/ADXcVCiaR49+ojJsI/rOG/PrygaQeCjyL++9/S1CUA0ucLDj+4h
      KxqxiIqmqkiSjCJLIIiUclE6owWBpfPi1RsCNclHjx6RT0VAjGFO6sx1E8sHWVaRRJF4Momi
      aAj4pGMKuichBi7dZp1+t0lvarNe3qTZWEZsM2ZDXh6d0em1GQ97tNujL1+kqJKL+owWHtZi
      TKvVodNuY7hQXk3R6E1ZTAc8e/6CWDJLLJqgdvGKSmuwzEB5xeG9j9gvryEIIoqqIgoCqWQc
      VdOW6WztBS9evSKqSvz86afonoAoxzB7VVKlZerWwuoK9c6MlCYiuCZPP/05YjSDFM0gmWMc
      AFHm9v0P2dou0jg95qg5JK1qJGIRNE1FFCUUWUYAUpkElfMKlmkRAFvrOWqtZfuH3QbnF6c0
      Gm069QYzJ2Bzu0y9WiepwmV7iGmaWPqEj1/UUK0m9e6EVquDKvnUuyNM00KSJeSrh1eQZKzp
      GOvKjhyPRTh985LeZIE5H/Hs2QsiiWWIE0GUUJXlhKCmygwGv3BffoVcmxIc+D6IIoHvIwgC
      QRDgex6BsAxnIggCvu8jCgKu5yNJIsJVeVEU8X0Pz/ORZQnHcZEkCUEQEYSAIABBgCAQWObs
      Fa62g8/rFSV8310GwZWkq2sACN6eB7gqHyCKnwUDuKpfFPA9HwiW3qCSjCAEeK5HIIjIkoj/
      WdvgKnFzgOt6y4dieUHLgGNBgOst93uuiyjJfJZrWBAgQEAIIPjCvs/qCYKAZSuFt+lXBUHA
      81wChGUQg6v+DXwfPwiQJBlBYNnfCIii8LZfJEnCdR1AQJQkhF9oryiKuK779pjnB8iiCIJI
      ECzb67oukiTjX12DLEtvzyXL4rI/r8oJ0jLMjO9z1R5/OWdzdV+8q375qsBsf/6zI/7Fn/z8
      nZ7D0AoUcmMJrUAh7zXDqcFPTt4tePC1CcBsOiWeSjEeDpBlBd/SqXYnFFIRaq0u69v7eLMe
      lpRka0Xj5Wmd7d1dBEFAFXy0eAr126SwDPmNpdGf8m/+y7s5w12bAPTbDaa6zmAwJJVIsJgO
      yBU2KBQLjBcmRc2m4hRIGi06wwTbd+/RrVRQsDB8jQf3vp2/d0jI13F9r9DgS3/Y3T9kMe4y
      nlufl7lSfHzP5uO//Aui2QKllTyZYgExDFYd8ivg2r4A+dIG8VSKqKYiywqz8QAr0EglNMRC
      ETWdQesfM5Mz7BRSrG7to0/GaIkseTEc+oT8agitQCE3lrPLJiftxTvVEQpAyI3lRptBg6vZ
      qi9OOBGAT4AkCHj+cvLL85aTUMtJLIDl/57nIQgikrSctPJ8H0leTr6IovyFiauQ31Sen3f5
      l//5f7zdTos6/8SrYtmrAJT+3h+w8vsf/LKfA9coAPXLS9Z3djg5ekUgaWxtZBi1bE57dX54
      b4c/fXLOH31vm7960+f3v7fNn//VCz66vcbcTSBpDsfPX7C2c4+44mPORziCxkpSpdqZsbWz
      x3ohfV1NC/nOCPji+CXwAwj8zy0r32Jwc23apDEb8OmTJ8w+S+8YBASIZOMKF+0Ja4UMlcaA
      vOowc0XKq2lqnau4L7EUu3t77O9sXv3Ux3FcYuk8UcnHvcq+GBLyTVybACRzazx89IiVdBzM
      KS9fXhDNxCgWV5hbPumYhuu7xFNRBt0x6cI62DqKLCOJIoqiIAigKAqKvHScckwDDwHHdr7h
      7CEhS0IlOOTG8tPnZ/z7/33ydjshLvhHfgvHzgOQ/1vfI/Po1tfWEQpAry1ReQAAFtdJREFU
      yI0lzA8Q8l7z8qTKX77+8qL4hGDwR/4Mz/s8wXj2B3eIlotfWce1WYFGwz6BYzIjjhqYuPqY
      i9aQne0yvXaP0s4Bg+pr3EiO+zsFXry5oLi2TiyZRHIN7ACy2Ty1kxfUexO2NzfIb+6wGPfR
      xz36E4PbDz5C754hJncQ3Cn5/PLTaEyHNEcm60mRhiESF32i2Jy0+mxuHVDKp+j3+4x7bdYP
      7jLq1unValhajpW4wHThsbWeo1JrUVjfxhy22Ll1m+FoRlIy6FsJov6Io4s6B3fuogkK02Gd
      keFza3eLem9EPh0jlV6hcvyanXsPmA765PN5Atfi1avXKMks/qhN11Iob5XY3SjS74/pNS+x
      hAj3b20xMSTaF88JYnnyUZ/OyOD2vftElfdjpnwwXfDff3z6pX0FccRjt4fj5N/ui+2U/uYJ
      wEKfE7gCw0UTTZa4d7DL3I8R1wKaztKKk8gVsRcG540eHz76Htawy9CwUOw5hg/pTJ7tg7s4
      4hmab2D7MNfnIEW5W47Qnph4hg9WDUWW3gpAfzDEND1MIcpgOsGQVUoRjXvfe0j16JhSPsV8
      PkdRJS7OKoiCx8HuOiN1k+nlUyCKZXoc3L1L87KGJkPl/BJfVjF8Cysw2D48ZKhblPJxKmcd
      XCnB3e041XqXmTnCddLE4nEITKr1EYo3J5/P47s2c8NkZzNHcUUimGcwZ3WgwHyuE00V2E4I
      NPt9AiGHrs+JxVaYz+aosQyaHM5//L9w7a+KvXKe81r/8x2Swv7hbQrZBJ3qMb25R0KG/miC
      4wXMZ1NGUx0BH9M035p8ZUViPBqiLywW0z4/elljNaJzcdnmstHB9z1M0yIIPGrVKt1GnYnh
      sr+7ztlFkyDwWcynuP4XukSKkpItZvbn8eCiqRx3bx+giS5Pfvx/iGQKSFoKzZ+xMA3q9Tqt
      egPd+dwUK4gyljFnPBmjqBrlrTL1ao1RvUJzGtBpX+J5LqZlg6Rx584d2rXPo+MpgcdwNMZ0
      XDzXYTCeEVGXlq+VtU0OdzZZ3dwhIc7pTexfy336TeXadADLNAgCUCIRRoMB+ZUsumGjih7n
      FzVya5skIjJS4OErETq1CrnSFotBE2I5EpJNtTli//Y+jmkSi6hcVi7IrW2hCD4RTWY8mhHP
      ZPHNBQtjRn9ssLdbxrI9YkrATHeJpuJMBgMSmsRla8jO3i6aLGIYy/zEEU1iMDLIJFVcQWMx
      bNEZLSiXN4hEIxi6jizLqDKMpxaxRAwZn0BScCyTWCyCabq45pSB7lFeXcEFFrMpshohHo9h
      LBYspgMmtsR+eZVqpUJipcRKXEL3ZKKSy9lFnfLODsNmFV9Ls1FMYToC/eYFJhGKSYWB7rGz
      tfHeeMp+MT/AZxTEEX/8C0OgzX/4t8k8+uuZ4iFUgkNuMI1Wl6n9ZWlXBI+NwMH3Px/da4UM
      ciL6lXWEAhByY2l1etio31zwa7g2Jdi2LBRNw7YsAtei3R+zWioxH3QwA4V0TGY0tylvrOGY
      Or4UQQ48JE1bKi6ew2ThkIrJVGtNcoVV9Ekf0w4oFFcYDkasrq+jSteu5oT8mjipD25ufoBO
      q4UPtNothp0uakSkUq0zHM1JJmIMegMi8oLz6pDqZYVGs82w1eKz9WKDdpPji0t8a8Dc0bi4
      uCAi+ox0i8b5MZ4gYNmhT1DI1/M34vXouxaNVo9IRGMy7FFvdrCMGa/eXJLNxWg2mlSrtS/9
      plavMWw20N2A2ulrAjVJIpkkmUqxe3iLeb/JbBFaREK+nusLi+IZPH1xxGYxiygFCHMTQZCI
      xZfKSm6tzObODrNZl737v43mjjFdlxfPXvLh3duslLa5c0+jP3P5/u/8EGPWB0klHhWZDPrY
      noAaZlwJ+QZCJTjkxvLs6JI/fdp8pzpCAQi5sdzoJZEhIe/KeXPEf/qPT76x3D8WjnCs0lce
      uzYB6DSbFNbXabeaiOaMhbaC4MxJayIXjT7r2/vY8yHlnEbLyyBbc9rNS5TkCoreozKBu3ub
      5IopXj07YmW1xLTfREkWuXe4zbjboDXz2E3By5HAmuKDYNEYzFhd32G7lOPoxadYUpJCLKDR
      n7C6uUPn4owPfvADfvajv2Rvq0y1NyCb3yDhz7CiK2iLHrXRjPXyLVR3yNSJkBAXvHhT4e69
      +0iyh+1rxAWLsb5gMp5R3r9DStaZ+xlWUhLPfvYz9h884uTZxxx+9AP6zUssfcbCk1grZonE
      85izIcW1LD/5+DW/84MPefX8UzwpzkYxzslFl+2DQ0orKc6ff0x893tML5+T3ryFMRwyn7Qw
      XJnbH3wIwx6sraFNWrQXMqcvn7FxeIjebqLl1oiiM5oabO7fw+xfomQ3cMeXHF8M2SuXye1t
      Ywy6LKYDRjOL7e0tzs4vyBU3uLW7eV2PDwC6afOq0vvGcoZ4jm189bFrswLZtk3w2V9BZTHt
      MV+Y9Kcm2+t5LMte+vp4Npbr4TgeAqBFYhwc7rK5d7j0kak12X34fbbXCwgCaJpGAAynC3AN
      PNfHt3UGswUBKh98/xHGtA/eDCFS4sO7+8wsePzoIYvRgKgq0a5XsQUV2/bI5HI45oKZE2BP
      R3geZHMpLMNiqjt45oy18g6bm1usZuO4goY5GzGeLZDw3y5L9X0H1w1w9AlaLEF3OCGdTVGt
      1FjMp0iRFFE5wDAtXC/Ati2GrRaZpEZvNiCSKiMHFrbr4HmfRRVzcSNpJs0qcizJoFXFME3i
      mSKP7m/RbE/wbBuPZXAxJVVka7PM/s469tWqOc8XyGVTGAsdKxCZj4ZsHRywublHSgU3CLAs
      Gz8QyaYSmOYC2/nNMS9fnwAYU84qtasFzAJbG3nqzT4R0ac3NTEXOqY+5cVJm0RkGf47kUwx
      6vf4otKSzKe5ePmKVn9MIpFiNOgR+DbNRoN+o87Q9Njc3qJRreE5BmfHRyBFlzkGpg1OKw0k
      3+TN0RGoUeLZFZrVOsWVDAgisUSKvXKeZqNFq9nE8EUswyEWcanXWzRrdeZfym4qkFAcdE9F
      kkSSySSqLBL4HrXLcyqVSwbTOe1GA0GOkRAMdF9mPhnguDaiqFKrnNCfLmh3uywWU1qNCZNB
      bZksIxBIJJNoisy8W6fVHdPs9RFEmdWMRme8YDbu8+q4SiYTA1wqZ2csrC8/tFokSiIWRZRk
      zIWJIhg0mj1arebbGP6xVJTL42OG0wWiJGHbNlFNIxKLE4tGfq3Px3fFtSnBjmViOB7xq44U
      RRHbdlAVCX2xQIvEwHewXYhFVXw/wDINJEVDUyRcH8SrWP6WsUCQVTzHQlQ0IlfHJSHA9QIk
      WcKxbSQRDMslHo8t49PbFpYbEIvI6AuTWDy+jKHv+wiigICAKIrL+PWBiICHH7CMoe84CJKM
      hI8vSAS+hySJ+AEIgY8XCIh46AuTSDSOIgXM5wsULYKmqnieiyAIiEKA7YEUeJi2Sywew1zo
      yGoUUQiQrmLkB56L5QZEIzIL3UCNxJCl5fUtQ8Qs4/zbjkvgOfhIRCMRAt9hrhtEozFESSbw
      XSRZwtD1qzLqMua/YyPKKgQegijhez6yLLLQl9ciiSCKAp7rYVomgqS8vXfXxVc5w30V/1z8
      BNvY+8pjoRUo5MYyGAyJJf567rBfRMNnmUbkrxNagUJuLNOFxcv67Jce/0AYIrgJvhBuGa2Y
      IbpZeLt9fc5wxoyjkwo7h/tUXr3CVWJs75TJpaKMxyb91hmmmGAtpdDoz7l99w6Kb/Pq1Uuy
      pV0ka4QeRNnOR3l2fMnO/i2MQZ3+3OVgdxs1otFvVJj7EUppFU/LgLsgk84wm81IJpPY+pix
      LZNWbCauRgSXaFzj9PiElfVdVNElnYqi6wKuOURO5ImINsfHpxTLB0xaZ+hBlIP1DKe1Hrfv
      3EYLcxZ8Z9S6k68dAv0z8QmKsfOlfSt/+NHfDAGoVKrcunOLk9MKB1srdMR1Rp1LBC9Jo2mh
      iDLl9VVGwz53dktU6y22sgmi2RUyskXNiJFxBrS7MTbvPKB9cYomw87WJrY+RR+b6GKSTFxh
      Nh7StUZoYkAmnWEwGJBMJmm0+1ieTywhc9S1WNNEkHxWN7cRBWi12qSSawwGYOpdFN0nMMeU
      tnYQCXADke2NNS4rxxRLW98qElnI3yyu7XUVCCKiKH1p9ZLrWIxGY1w/wFzMmUx1rPmIv/rJ
      E/KFAhAwn05YGBayrKDIEq7v8rO/+nPUVB7bMhhPpvgBeI6LooicVy4RRJliWqU7/qIx2Kd+
      ec75eQ0HkXIxTb07xgsg8Cxq9Sa+5+MaC2xvQbXWonJZxQsEAsek3mxhGjrj6Zy9w9tMew1G
      M/O77saQd+TavgDl9SIvn79g6+AOsmiQESRYL5PJxOn3FvTbI6bzORsbu+wf3Ga0MJCiEQ4O
      bpGIaCxOj+gEEQ5LWQpb++jDAWZUYzSZktsqk8it0Dg/IZ5IkchkiKbizPWlfc8zZxydnnPn
      4Q+Xwx9LoJjJ4Mx1NjdXOTk5J7e2RcSf8fJkwOHeBsXSHxHoQyRN4fysQmFjh7k3YzKbExMt
      DFemnPjNMA2+T4RWoJAby/FFgxe16S89/ntCB9H9cpDkaLlI4mDj7XYoACE3ltAZLuS95lWl
      x7/+V//rneq4NgE4efGEsWGST6VQSg+Yt44pZTUmboxEMo5qT3h5XkdUYmQ1l4kF2xurnJ1d
      IqpR8gmR3sQgUygQlWKo7pBJoJKKx1jYAnvlVd48+QuiW4+ZXvyM3N595r0RxqyN40vs3vsI
      ddzkWXdIOrFCMG8TqCkK6QTp9W2m3RqpaITnJ5ekc0UKSkCQjnD2poqsRckkZLb379CsVRh2
      G4jRPB88uMWrJx/jKAlycYUXr494sLeGsP6YYHyJPR8zNW1ya7uIno416TNzRQrpFO3RmK3d
      W6zlvnliJ2SJ5/vo5rtFAr8+K1AQLDO8CPD6+RMqze4yR0AQQLAMe/fw4fdJxhSy2Sy+56FP
      Rxx8+FuUclEM2wdBQBIFLo5fcXRWo7C+wenxKRvrRQLfwtUKzLuXJAvrTLsN/CAgU1jn8cNb
      DAZTgiDA930kSeKzkeDbEWEQ0O+MuXPvgPl8BkHAfDzh7qPHrKVlTCcguCqfTWfwgwAQyGYz
      +J5PafuA/YN9itk4wVW7lHiG7z96jDMfXu1bniqZzSL6X0jsEPKdcW1fgESmyH65DOMaUqnM
      onOKIEpIgsfxq+dsbpR4+ukTpEiClGUjBD5yNM35848RtThrhSwHa2VkwSAixVHdEaKksb27
      jSYJTDsdTNfFth1SyTgb+RTPK3OSiymfdHvs3/8QcexweLiHMbHwJWnpNemYPH/2glIhRaGU
      4/mrE5AjiJJEKp3l6OefIEcTrGcUnv7sp6QLZXAmuIaDi49lO7iujef5yJKMlslTf/JTtHiK
      rOry5Mkn5DcOENw5kiQieGCaFqIoYJgmEH4BvktCJTjkxvLjpyf82//55p3qCAUg5MYSWoFC
      3mvawzn/9afVd6rj2gTg/OhTWn2T7d191tYLDDsdjNmQwcLnzv4WpyenJFZKZOIquVyOSb/F
      Wa3N9v4dnEmL9kBnp7xGEM1gz0asrhaZ9xuMgiQJb4SpFZDsGZ41pz2cs3t4h5Ti8/TFS+LZ
      NTKKTa075mBnEz9aJC7NsSyZQbvC1BG5XV7FVGJ0z19hCnH2Skn86CqOPsQzp9S7c+4+uMt0
      OKBQWKHXH7IY95lYAvdu73F69JpYbp2ViM/IVZDNAee1HgeHByjRJPPuJYO5z/07G5xV52zm
      ZFxZ5fK8Qmn7gNXQGvSN9MY6f/Jnr9+pjmuzAu3d3mclt4W4GPD8xQuOKzXmuo6qKHTaTXZu
      f4Ctj5hMp0BAuz/how8f0GucMl6IZBMqSiLFxdMfoXtLOe6M5ujjHo7n0axdMhyOMAOJjx7c
      oVWv4zsOhc1dgsWUqT5HVlSwZ8xscF2TSbePr8aJqiKuoTMbVAnSe2ylfC6aPRYuTKdTRqMx
      0WQSRRKxZ2Om8zHjyQJXTrJbTPL66IiVjQPKayu0B1OMyYDS1g4ruVVWUwrTSQ+dFPe3k1w2
      uvTaXfr9AaPJGEdQScZDl4rvimv33RVkjYNbt8glY8RSWW7t7xBVJBamheMsbbxBwHJFlGXg
      o+BYBtmoysQWSBfW2S3lCFyTWq1Os1rD8AQ28nGavTkArm3gIwEBJ88/YY5GJJLg4PAWcXW5
      H0CUJUzLIaoK2I6PqEaxFlPmC4tYVMXQ5ywWJhvb+yQ9nb5us75Z5MnHR2xsFrAsE8M0iUYi
      LAwTxzFpXJ5Tuahi+l9otKjgmgt03UTVZMp7O9TOK8TSRe7uFbm4bH23N+E95hqVYIfZzEUR
      A5R4jMVsxmLSpzlccO/uLRrnJ6TWdpCsEdX2lNu3ypyd1zi4dRt3PuCsPuDO3Vs4lkk8FsNz
      bSwnQBI8LNsllkjR77bRRI96f8HdOweIvovlBXiWgWXOqTa67O3tcX5+webuLslIHH3SojNx
      Odxaw5NUpt0aC+Jsl3KcHb8hu76LaI5oTWzuHOwgAN1ej9VikVGnzsAU2d8u0bw4RYilSSYz
      xCQbU4jiWwbJmIruCDjzHt2Zz+FWHsNRMKY9tHicynmV3Vu3iWuhevZNfNslkV9HaAUKubFU
      Gx36uv/NBb+G8DUTcmOJqBLl+DIbpEpANAiQIipSVPvWdVx7fgDXtrEdh2gkguf7BL7PZDzC
      E2SSUZmZbpLNZhmNJ2RzK2iKxGI+wfRERM/CtF3SuTyBYxGJRhj0+3iIJKMqM90gly8wHQ1I
      pHOokoDPUp8QBAlBEpkM+2jxJPpkApJMNpNiPJ6RW8kxG/UJ5CjxiIKiqti2g6a9W0KGkF8d
      b6r9t0Og73kWf9/VWfnDh5T+7u9+6zquTQAuzy/Yu3uHRqNG7fKC2/c+wjB0fEHDHbaw0gVm
      gynxTA5n0qAzVWn3TvjowQGvXh5R3NgkEVE4Pz/jYSbD62efsHXvt5j3O0ylJPrQQEtlmDTO
      qZsSZTlCUoKh6+KOO6hSGl9dUO35bJcEjH6VibbJqH9EJBpnMF3g6X08G4pbK8znHpKWYHej
      8M2NC7kxXK8VKAjw/YCNrW2aV1kRBVEmv5KnUFjBtQ3a7Q6uL1JY2yQuC/hIbJdX6fYHpHJ5
      VnI5BKPPzJZotNqsXP3Wd0za7TaRQpmIM2M6NwCfszcvOL2ysqjZEjnFZjKzKBTyrOTzCJLK
      9s4OgrtAnw4ZmS6FwiajXpdyKf81jQm5iVzbFyCT0vj5Jx+zvnsHybdQPQdfjRCRVWQCkCQi
      0Qim7oKkcP7qCaura0h4DIcTRElGAGLxONO5xwcPP2A8HCGrGpos40YjCI6JOZ9i2B5RSUSU
      Ve49eIirj1EkDc9cMDdtkjERSY0SUUTUmMInnzxhfecWmUwa3zYxnYCtnR3k9yX94ntEaAUK
      ubF8+vqC//ZJHYA93+F3PZPUg12yv3X3W9fxVgBM03ybGzck5CZgWRaa9u0tPl9F+AUIubG4
      rossv9so/tpdIUJC/n+RpHfPARcKQMiNRRDe3SgRzgSH3GhOXz+jP/e5vVEkSEbQdSiv5b6y
      rGNMefqqwsOHd3j56TOEWCb8AoTcbAQ1xuFKnL4+5ZPnp6wXf/kKMSWaorSSwlnMyGzuk1KC
      UABCbjbWfMJpd0JKiXDvcIN6e/hLy9qLKZXLS7rTBf3aOSPdCa1AITcbz3VwfVAkEUEU8Xwf
      +Zcox77nYlo2kqwg4oMohwIQ8n4TDoFC3mtCAQh5rwkFIOS9JhSAkPeaUABC3mtCAQh5rwkF
      IOS9JhSAkPea/wuliUVqocFFYAAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
